{"version":3,"file":"2-snackbar.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet delay = 0;\n\nconst input = document.querySelector('input[name=\"delay\"]');\ninput.addEventListener('input', event => {\n  delay = Number(event.target.value);\n});\n\nconst fullfield = document.querySelector('input[value=\"fulfilled\"]');\nconst rejected = document.querySelector('input[value=\"rejected\"]');\n\nconst form = document.querySelector('.form');\nconst showNotification = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (fullfield.checked) {\n        resolve(delay);\n      } else if (rejected.checked) {\n        reject(delay);\n      }\n    }, delay);\n  });\n};\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  showNotification()\n    .then(delay => {\n      iziToast.show({\n        message: `✅ Fulfilled promise in ${delay}ms`,\n      });\n    })\n    .catch(delay => {\n      iziToast.show({\n        message: `❌ Rejected promise in ${delay}ms`,\n      });\n    });\n});\n"],"names":["delay","input","event","fullfield","rejected","form","showNotification","resolve","reject","iziToast"],"mappings":"+FAGA,IAAIA,EAAQ,EAEZ,MAAMC,EAAQ,SAAS,cAAc,qBAAqB,EAC1DA,EAAM,iBAAiB,QAASC,GAAS,CACvCF,EAAQ,OAAOE,EAAM,OAAO,KAAK,CACnC,CAAC,EAED,MAAMC,EAAY,SAAS,cAAc,0BAA0B,EAC7DC,EAAW,SAAS,cAAc,yBAAyB,EAE3DC,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAmB,IAChB,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACXL,EAAU,QACZI,EAAQP,CAAK,EACJI,EAAS,SAClBI,EAAOR,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAGHK,EAAK,iBAAiB,SAAUH,GAAS,CACvCA,EAAM,eAAc,EACpBI,EAAkB,EACf,KAAKN,GAAS,CACbS,EAAS,KAAK,CACZ,QAAS,0BAA0BT,CAAK,IAChD,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdS,EAAS,KAAK,CACZ,QAAS,yBAAyBT,CAAK,IAC/C,CAAO,CACP,CAAK,CACL,CAAC"}